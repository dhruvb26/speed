[
  {
    "type": "function",
    "function": {
      "name": "GMAIL_CREATE_EMAIL_DRAFT",
      "description": "Creates a gmail email draft, supporting to/cc/bcc, subject, plain/html body (ensure `is html=true` for html), attachments, and threading.",
      "parameters": {
        "type": "object",
        "properties": {
          "attachment": {
            "title": "FileUploadable",
            "description": "File to attach to the email.",
            "format": "path",
            "type": "string",
            "file_uploadable": true
          },
          "bcc": {
            "type": "array",
            "description": "'Bcc' (blind carbon copy) recipient email addresses.",
            "title": "Bcc",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "bcc.recipient@example.com"
              ]
            ]
          },
          "body": {
            "type": "string",
            "description": "Email body content (plain text or HTML); `is_html` must be True if HTML.",
            "title": "Body",
            "examples": [
              "Hello Team,\n\nPlease find the attached report for your review.\n\nBest regards,\nYour Name",
              "<h1>Meeting Confirmation</h1><p>This email confirms our meeting scheduled for next Tuesday.</p>"
            ]
          },
          "cc": {
            "type": "array",
            "description": "'Cc' (carbon copy) recipient email addresses.",
            "title": "Cc",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "cc.recipient1@example.com",
                "cc.recipient2@example.com"
              ]
            ]
          },
          "extra_recipients": {
            "type": "array",
            "description": "Additional 'To' recipient email addresses.",
            "title": "Extra Recipients",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "jane.doe@example.com",
                "another.recipient@example.com"
              ]
            ]
          },
          "is_html": {
            "type": "boolean",
            "description": "Set to True if `body` is HTML, otherwise the action may fail.",
            "title": "Is Html",
            "default": false,
            "examples": [
              "True",
              "False"
            ]
          },
          "recipient_email": {
            "type": "string",
            "description": "Primary recipient's email address.",
            "title": "Recipient Email",
            "examples": [
              "john.doe@example.com"
            ]
          },
          "subject": {
            "type": "string",
            "description": "Email subject line.",
            "title": "Subject",
            "examples": [
              "Project Update Q3",
              "Meeting Reminder"
            ]
          },
          "thread_id": {
            "type": "string",
            "description": "ID of an existing Gmail thread to reply to; omit for new thread.",
            "title": "Thread Id",
            "default": null,
            "examples": [
              "17f45ec49a9c3f1b"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address or 'me' for the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "recipient_email",
          "subject",
          "body"
        ],
        "title": "CreateEmailDraftRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_DELETE_DRAFT",
      "description": "Permanently deletes a specific gmail draft using its id; ensure the draft exists and the user has necessary permissions for the given `user id`.",
      "parameters": {
        "type": "object",
        "properties": {
          "draft_id": {
            "type": "string",
            "description": "Immutable ID of the draft to delete, typically obtained when the draft was created.",
            "title": "Draft Id",
            "examples": [
              "r-8388446164079304564"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address or 'me' for the authenticated user; 'me' is recommended.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "draft_id"
        ],
        "title": "DeleteDraftRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_DELETE_MESSAGE",
      "description": "Permanently deletes a specific email message by its id from a gmail mailbox; for `user id`, use 'me' for the authenticated user or an email address to which the authenticated user has delegated access.",
      "parameters": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "description": "Identifier of the email message to delete.",
            "title": "Message Id",
            "examples": [
              "185120e4428ba8cf",
              "17a872b77b9e7a3b"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address. The special value 'me' refers to the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "message_id"
        ],
        "title": "DeleteMessageRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_FETCH_EMAILS",
      "description": "Fetches a list of email messages from a gmail account, supporting filtering, pagination, and optional full content retrieval.",
      "parameters": {
        "type": "object",
        "properties": {
          "ids_only": {
            "type": "boolean",
            "description": "If true, only returns message IDs from the list API without fetching individual message details. Fastest option for getting just message IDs and thread IDs.",
            "title": "Ids Only",
            "default": false,
            "examples": [
              "True",
              "False"
            ]
          },
          "include_payload": {
            "type": "boolean",
            "description": "Set to true to include full message payload (headers, body, attachments); false for metadata only.",
            "title": "Include Payload",
            "default": true,
            "examples": [
              "True",
              "False"
            ]
          },
          "include_spam_trash": {
            "type": "boolean",
            "description": "Set to true to include messages from 'SPAM' and 'TRASH'.",
            "title": "Include Spam Trash",
            "default": false,
            "examples": [
              "True",
              "False"
            ]
          },
          "label_ids": {
            "type": "array",
            "description": "Filter by label IDs; only messages with all specified labels are returned. Common IDs: 'INBOX', 'SPAM', 'TRASH', 'UNREAD', 'STARRED', 'IMPORTANT', 'CATEGORY_PERSONAL', 'CATEGORY_SOCIAL', 'CATEGORY_PROMOTIONS', 'CATEGORY_UPDATES', 'CATEGORY_FORUMS'. Use 'listLabels' action for custom IDs.",
            "title": "Label Ids",
            "items": {
              "type": "string"
            },
            "examples": [
              "['INBOX', 'UNREAD']",
              "['IMPORTANT']",
              "[]"
            ]
          },
          "max_results": {
            "type": "integer",
            "description": "Maximum number of messages to retrieve per page.",
            "title": "Max Results",
            "default": 1,
            "minimum": 1,
            "maximum": 500,
            "examples": [
              "10",
              "100",
              "500"
            ]
          },
          "page_token": {
            "type": "string",
            "description": "Token for retrieving a specific page, obtained from a previous response's `nextPageToken`. Omit for the first page.",
            "title": "Page Token",
            "default": null,
            "nullable": true
          },
          "query": {
            "type": "string",
            "description": "Gmail advanced search query (e.g., 'from:user subject:meeting'). Supports operators like 'from:', 'to:', 'subject:', 'label:', 'has:attachment', 'is:unread', 'after:YYYY/MM/DD', 'before:YYYY/MM/DD', AND/OR/NOT. Use quotes for exact phrases. Omit for no query filter.",
            "title": "Query",
            "default": null,
            "nullable": true,
            "examples": [
              "from:john@example.com is:unread",
              "subject:meeting has:attachment",
              "after:2024/01/01 before:2024/02/01",
              "is:important OR is:starred",
              "label:work -label:spam"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address or 'me' for the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          },
          "verbose": {
            "type": "boolean",
            "description": "If false, uses optimized concurrent metadata fetching for faster performance (~75% improvement). If true, uses standard detailed message fetching. When false, only essential fields (subject, sender, recipient, time, labels) are guaranteed.",
            "title": "Verbose",
            "default": true,
            "examples": [
              "True",
              "False"
            ]
          }
        },
        "title": "FetchEmailsRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_FETCH_MESSAGE_BY_MESSAGE_ID",
      "description": "Fetches a specific email message by its id, provided the `message id` exists and is accessible to the authenticated `user id`.",
      "parameters": {
        "type": "object",
        "properties": {
          "format": {
            "type": "string",
            "description": "Format for message content: 'minimal' (ID/labels), 'full' (complete data), 'raw' (base64url string), 'metadata' (ID/labels/headers).",
            "title": "Format",
            "default": "full",
            "examples": [
              "minimal",
              "full",
              "raw",
              "metadata"
            ]
          },
          "message_id": {
            "type": "string",
            "description": "Unique ID of the email message to retrieve, obtainable from actions like 'List Messages'.",
            "title": "Message Id",
            "minLength": 1,
            "examples": [
              "xsdfe3264vrfw"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address or 'me' for the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "user@example.com",
              "me"
            ]
          }
        },
        "required": [
          "message_id"
        ],
        "title": "FetchMessageByMessageIdRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_GET_ATTACHMENT",
      "description": "Retrieves a specific attachment by id from a message in a user's gmail mailbox, requiring valid message and attachment ids.",
      "parameters": {
        "type": "object",
        "properties": {
          "attachment_id": {
            "type": "string",
            "description": "ID of the attachment to retrieve.",
            "title": "Attachment Id",
            "examples": [
              "A_PART0.1_18exampleAttachmentId7f9"
            ]
          },
          "file_name": {
            "type": "string",
            "description": "Desired filename for the downloaded attachment.",
            "title": "File Name",
            "examples": [
              "invoice.pdf",
              "report.docx"
            ]
          },
          "message_id": {
            "type": "string",
            "description": "Immutable ID of the message containing the attachment.",
            "title": "Message Id",
            "examples": [
              "18exampleMessageId7f9"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address ('me' for authenticated user).",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "message_id",
          "attachment_id",
          "file_name"
        ],
        "title": "GetAttachmentRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_GET_CONTACTS",
      "description": "Fetches contacts (connections) for the authenticated google account, allowing selection of specific data fields and pagination.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_token": {
            "type": "string",
            "description": "Token to retrieve a specific page of results, obtained from 'nextPageToken' in a previous response.",
            "title": "Page Token"
          },
          "person_fields": {
            "type": "string",
            "description": "Comma-separated person fields to retrieve for each contact (e.g., 'names,emailAddresses').",
            "title": "Person Fields",
            "default": "emailAddresses,names,birthdays,genders",
            "examples": [
              "addresses",
              "ageRanges",
              "biographies",
              "birthdays",
              "coverPhotos",
              "emailAddresses",
              "events",
              "genders",
              "imClients",
              "interests",
              "locales",
              "memberships",
              "metadata",
              "names",
              "nicknames",
              "occupations",
              "organizations",
              "phoneNumbers",
              "photos",
              "relations",
              "residences",
              "sipAddresses",
              "skills",
              "urls",
              "userDefined"
            ]
          },
          "resource_name": {
            "type": "string",
            "description": "Identifier for the person resource whose connections are listed; use 'people/me' for the authenticated user.",
            "title": "Resource Name",
            "default": "people/me"
          }
        },
        "title": "GetContactsRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_LIST_DRAFTS",
      "description": "Retrieves a paginated list of email drafts from a user's gmail account. use verbose=true to get full draft details including subject, body, sender, and timestamp.",
      "parameters": {
        "type": "object",
        "properties": {
          "max_results": {
            "type": "integer",
            "description": "Maximum number of drafts to return per page.",
            "title": "Max Results",
            "default": 1,
            "minimum": 1,
            "maximum": 500,
            "examples": [
              10,
              100,
              500
            ]
          },
          "page_token": {
            "type": "string",
            "description": "Token from a previous response to retrieve a specific page of drafts.",
            "title": "Page Token",
            "default": "",
            "examples": [
              "CiaKJDhWSE5UURE9PSIsImMiOiJhYmMxMjMifQ=="
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's mailbox ID; use 'me' for the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          },
          "verbose": {
            "type": "boolean",
            "description": "If true, fetches full draft details including subject, sender, recipient, body, and timestamp. If false, returns only draft IDs (faster).",
            "title": "Verbose",
            "default": false,
            "examples": [
              true,
              false
            ]
          }
        },
        "title": "ListDraftsRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_MOVE_TO_TRASH",
      "description": "Moves an existing, non-deleted email message to the trash for the specified user.",
      "parameters": {
        "type": "object",
        "properties": {
          "message_id": {
            "type": "string",
            "description": "Identifier of the email message to move to trash.",
            "title": "Message Id",
            "examples": [
              "1875f42779f726f2"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address or 'me' for the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "user@example.com",
              "me"
            ]
          }
        },
        "required": [
          "message_id"
        ],
        "title": "MoveToTrashRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_PATCH_LABEL",
      "description": "Patches the specified label.",
      "parameters": {
        "type": "object",
        "properties": {
          "color": {
            "type": "object",
            "description": "The color to assign to the label. Color is only available for labels that have their `type` set to `user`.",
            "title": "PatchLabelColor",
            "default": null,
            "nullable": true,
            "properties": {
              "backgroundColor": {
                "type": "string",
                "description": "The background color of the label, represented as a hex string. Must be one of Gmail's predefined colors from the color palette. See: https://developers.google.com/workspace/gmail/api/guides/labels#color_palette",
                "title": "Background Color",
                "default": null,
                "nullable": true,
                "examples": [
                  "#ffffff",
                  "#f3f3f3",
                  "#efefef",
                  "#cccccc"
                ]
              },
              "textColor": {
                "type": "string",
                "description": "The text color of the label, represented as a hex string. Must be one of Gmail's predefined colors from the color palette. See: https://developers.google.com/workspace/gmail/api/guides/labels#color_palette",
                "title": "Text Color",
                "default": null,
                "nullable": true,
                "examples": [
                  "#000000",
                  "#434343",
                  "#666666",
                  "#ffffff"
                ]
              }
            }
          },
          "id": {
            "type": "string",
            "description": "The ID of the label to update.",
            "title": "Id",
            "examples": [
              "LABEL_123"
            ]
          },
          "labelListVisibility": {
            "type": "string",
            "description": "The visibility of the label in the label list in the Gmail web interface.",
            "title": "Label List Visibility",
            "default": null,
            "nullable": true,
            "examples": [
              "labelShow",
              "labelShowIfUnread",
              "labelHide"
            ]
          },
          "messageListVisibility": {
            "type": "string",
            "description": "The visibility of messages with this label in the message list in the Gmail web interface.",
            "title": "Message List Visibility",
            "default": null,
            "nullable": true,
            "examples": [
              "show",
              "hide"
            ]
          },
          "name": {
            "type": "string",
            "description": "The display name of the label.",
            "title": "Name",
            "default": null,
            "nullable": true,
            "examples": [
              "My Updated Label"
            ]
          },
          "userId": {
            "type": "string",
            "description": "The user's email address. The special value `me` can be used to indicate the authenticated user.",
            "title": "User Id",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "userId",
          "id"
        ],
        "title": "PatchLabelRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_REPLY_TO_THREAD",
      "description": "Sends a reply within a specific gmail thread using the original thread's subject, requiring a valid `thread id` and correctly formatted email addresses. supports attachments via the `attachment` parameter with valid `s3key`, `mimetype`, and `name`.",
      "parameters": {
        "type": "object",
        "properties": {
          "attachment": {
            "title": "FileUploadable",
            "description": "File to attach to the reply. Just Provide file path here",
            "format": "path",
            "type": "string",
            "file_uploadable": true
          },
          "bcc": {
            "type": "array",
            "description": "BCC recipients' email addresses (hidden from other recipients).",
            "title": "Bcc",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "bcc.recipient@example.com"
              ]
            ]
          },
          "cc": {
            "type": "array",
            "description": "CC recipients' email addresses.",
            "title": "Cc",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "cc.recipient1@example.com",
                "cc.recipient2@example.com"
              ]
            ]
          },
          "extra_recipients": {
            "type": "array",
            "description": "Additional 'To' recipients' email addresses.",
            "title": "Extra Recipients",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "jane.doe@example.com",
                "another.person@example.com"
              ]
            ]
          },
          "is_html": {
            "type": "boolean",
            "description": "Indicates if `message_body` is HTML; if True, body must be valid HTML, if False, body should not contain HTML tags.",
            "title": "Is Html",
            "default": false,
            "examples": [
              "True",
              "False"
            ]
          },
          "message_body": {
            "type": "string",
            "description": "Content of the reply message, either plain text or HTML.",
            "title": "Message Body",
            "examples": [
              "Dear Sir, Nice talking to you. Yours respectfully, John"
            ]
          },
          "recipient_email": {
            "type": "string",
            "description": "Primary recipient's email address.",
            "title": "Recipient Email",
            "examples": [
              "john@doe.com"
            ]
          },
          "thread_id": {
            "type": "string",
            "description": "Identifier of the Gmail thread for the reply.",
            "title": "Thread Id",
            "examples": [
              "x53r3vdevff"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "Identifier for the user sending the reply; 'me' refers to the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "thread_id",
          "message_body",
          "recipient_email"
        ],
        "title": "ReplyToThreadRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_SEARCH_PEOPLE",
      "description": "Searches contacts by matching the query against names, nicknames, emails, phone numbers, and organizations, optionally including 'other contacts'.",
      "parameters": {
        "type": "object",
        "properties": {
          "other_contacts": {
            "type": "boolean",
            "description": "Include 'Other Contacts' (interacted with but not explicitly saved) in search results; if false, searches only primary contacts.",
            "title": "Other Contacts",
            "default": false
          },
          "pageSize": {
            "type": "integer",
            "description": "Maximum results to return; values >30 are capped to 30 by the API.",
            "title": "Page Size",
            "default": 10,
            "minimum": 0,
            "maximum": 30
          },
          "person_fields": {
            "type": "string",
            "description": "Comma-separated fields to return (e.g., 'names,emailAddresses'); see PersonFields enum. If 'other_contacts' is true, only 'emailAddresses', 'names', 'phoneNumbers' are allowed.",
            "title": "Person Fields",
            "default": "emailAddresses,names,phoneNumbers",
            "examples": [
              "addresses",
              "ageRanges",
              "biographies",
              "birthdays",
              "coverPhotos",
              "emailAddresses",
              "events",
              "genders",
              "imClients",
              "interests",
              "locales",
              "memberships",
              "metadata",
              "names",
              "nicknames",
              "occupations",
              "organizations",
              "phoneNumbers",
              "photos",
              "relations",
              "residences",
              "sipAddresses",
              "skills",
              "urls",
              "userDefined"
            ]
          },
          "query": {
            "type": "string",
            "description": "Matches contact names, nicknames, email addresses, phone numbers, and organization fields.",
            "title": "Query"
          }
        },
        "required": [
          "query"
        ],
        "title": "SearchPeopleRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_SEND_DRAFT",
      "description": "Sends the specified, existing draft to the recipients in the to, cc, and bcc headers.",
      "parameters": {
        "type": "object",
        "properties": {
          "draft_id": {
            "type": "string",
            "description": "The ID of the draft to send.",
            "title": "Draft Id",
            "examples": [
              "r-xxxxxxxxxxxxxxxxx"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "The user's email address. The special value `me` can be used to indicate the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "draft_id"
        ],
        "title": "SendDraftRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_SEND_EMAIL",
      "description": "Sends an email via gmail api using the authenticated user's google profile display name, requiring `is html=true` if the body contains html and valid `s3key`, `mimetype`, `name` for any attachment.",
      "parameters": {
        "type": "object",
        "properties": {
          "attachment": {
            "title": "FileUploadable",
            "description": "File to attach; ensure `s3key`, `mimetype`, and `name` are set if provided. Omit or set to null for no attachment.",
            "format": "path",
            "type": "string",
            "file_uploadable": true
          },
          "bcc": {
            "type": "array",
            "description": "Blind Carbon Copy (BCC) recipients' email addresses.",
            "title": "Bcc",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "auditor@example.com"
              ]
            ]
          },
          "body": {
            "type": "string",
            "description": "Email content (plain text or HTML); if HTML, `is_html` must be `True`.",
            "title": "Body",
            "examples": [
              "Hello team, let's discuss the project updates tomorrow.",
              "<h1>Welcome!</h1><p>Thank you for signing up.</p>"
            ]
          },
          "cc": {
            "type": "array",
            "description": "Carbon Copy (CC) recipients' email addresses.",
            "title": "Cc",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "manager@example.com",
                "teamlead@example.com"
              ]
            ]
          },
          "extra_recipients": {
            "type": "array",
            "description": "Additional 'To' recipients' email addresses (not Cc or Bcc).",
            "title": "Extra Recipients",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              [
                "jane.doe@example.com",
                "support@example.com"
              ]
            ]
          },
          "is_html": {
            "type": "boolean",
            "description": "Set to `True` if the email body contains HTML tags.",
            "title": "Is Html",
            "default": false
          },
          "recipient_email": {
            "type": "string",
            "description": "Primary recipient's email address.",
            "title": "Recipient Email",
            "examples": [
              "john@doe.com"
            ]
          },
          "subject": {
            "type": "string",
            "description": "Subject line of the email.",
            "title": "Subject",
            "default": null,
            "examples": [
              "Project Update Meeting",
              "Your Weekly Newsletter"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address; the literal 'me' refers to the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "user@example.com",
              "me"
            ]
          }
        },
        "required": [
          "recipient_email",
          "body"
        ],
        "title": "SendEmailRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_ADD_LABEL_TO_EMAIL",
      "description": "Adds and/or removes specified gmail labels for a message; ensure `message id` and all `label ids` are valid (use 'listlabels' for custom label ids).",
      "parameters": {
        "type": "object",
        "properties": {
          "add_label_ids": {
            "type": "array",
            "description": "Label IDs to add. For custom labels, obtain IDs via 'listLabels'. System labels (e.g., 'INBOX', 'SPAM') can also be used.",
            "title": "Add Label Ids",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              "STARRED",
              "IMPORTANT",
              "Label_123"
            ]
          },
          "message_id": {
            "type": "string",
            "description": "Immutable ID of the message to modify (e.g., from 'fetchEmails' or 'fetchMessagesByThreadId').",
            "title": "Message Id",
            "examples": [
              "17f1b2b9c1b2a3d4"
            ]
          },
          "remove_label_ids": {
            "type": "array",
            "description": "Label IDs to remove. For custom labels, obtain IDs via 'listLabels'. System labels can also be used.",
            "title": "Remove Label Ids",
            "default": [],
            "items": {
              "type": "string"
            },
            "examples": [
              "UNREAD",
              "Label_456"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "User's email address or 'me' for the authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "message_id"
        ],
        "title": "AddLabelToEmailRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_CREATE_LABEL",
      "description": "Creates a new label with a unique name in the specified user's gmail account.",
      "parameters": {
        "type": "object",
        "properties": {
          "label_list_visibility": {
            "type": "string",
            "description": "Controls how the label is displayed in the label list in the Gmail sidebar.",
            "title": "Label List Visibility",
            "default": "labelShow",
            "examples": [
              "labelShow",
              "labelShowIfUnread",
              "labelHide"
            ]
          },
          "label_name": {
            "type": "string",
            "description": "The name for the new label.",
            "title": "Label Name",
            "examples": [
              "Work",
              "Important Documents",
              "Receipts 2024"
            ]
          },
          "message_list_visibility": {
            "type": "string",
            "description": "Controls how messages with this label are displayed in the message list.",
            "title": "Message List Visibility",
            "default": "show",
            "examples": [
              "show",
              "hide"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "The email address of the user in whose account the label will be created.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "label_name"
        ],
        "title": "CreateLabelRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_FETCH_MESSAGE_BY_THREAD_ID",
      "description": "Retrieves messages from a gmail thread using its `thread id`, where the thread must be accessible by the specified `user id`.",
      "parameters": {
        "type": "object",
        "properties": {
          "page_token": {
            "type": "string",
            "description": "Opaque page token for fetching a specific page of messages if results are paginated.",
            "title": "Page Token",
            "default": "",
            "examples": [
              "CiAKGhIKJdealEffectivelyPageToken"
            ]
          },
          "thread_id": {
            "type": "string",
            "description": "Unique ID of the thread, obtainable from actions like 'listThreads' or 'fetchEmails'.",
            "title": "Thread Id",
            "examples": [
              "xsdfe3264vrfw"
            ]
          },
          "user_id": {
            "type": "string",
            "description": "The email address of the user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "required": [
          "thread_id"
        ],
        "title": "FetchMessageByThreadIdRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_GET_PEOPLE",
      "description": "Retrieves either a specific person's details (using `resource name`) or lists 'other contacts' (if `other contacts` is true), with `person fields` specifying the data to return.",
      "parameters": {
        "type": "object",
        "properties": {
          "other_contacts": {
            "type": "boolean",
            "description": "If true, retrieves 'Other Contacts' (people interacted with but not explicitly saved), ignoring `resource_name` and enabling pagination/sync. If false, retrieves information for the single person specified by `resource_name`.",
            "title": "Other Contacts",
            "default": false
          },
          "page_size": {
            "type": "integer",
            "description": "The number of 'Other Contacts' to return per page. Applicable only when `other_contacts` is true.",
            "title": "Page Size",
            "default": 10,
            "minimum": 1,
            "maximum": 1000
          },
          "page_token": {
            "type": "string",
            "description": "An opaque token from a previous response to retrieve the next page of 'Other Contacts' results. Applicable only when `other_contacts` is true and paginating.",
            "title": "Page Token",
            "default": ""
          },
          "person_fields": {
            "type": "string",
            "description": "A comma-separated field mask to restrict which fields on the person (or persons) are returned. Consult the Google People API documentation for a comprehensive list of valid fields.",
            "title": "Person Fields",
            "default": "emailAddresses,names,birthdays,genders",
            "examples": [
              "names,emailAddresses",
              "emailAddresses,names,birthdays,genders",
              "addresses,phoneNumbers,metadata"
            ]
          },
          "resource_name": {
            "type": "string",
            "description": "Resource name identifying the person for whom to retrieve information (like the authenticated user or a specific contact). Used only when `other_contacts` is false.",
            "title": "Resource Name",
            "default": "people/me",
            "examples": [
              "people/me",
              "people/c12345678901234567890",
              "people/102345678901234567890"
            ]
          },
          "sync_token": {
            "type": "string",
            "description": "A token from a previous 'Other Contacts' list call to retrieve only changes since the last sync; leave empty for an initial full sync. Applicable only when `other_contacts` is true.",
            "title": "Sync Token",
            "default": ""
          }
        },
        "title": "GetPeopleRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_GET_PROFILE",
      "description": "Retrieves key gmail profile information (email address, message/thread totals, history id) for a user.",
      "parameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "The email address of the Gmail user whose profile is to be retrieved, or the special value 'me' to indicate the currently authenticated user.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "user@example.com",
              "me"
            ]
          }
        },
        "title": "GetProfileRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GMAIL_LIST_LABELS",
      "description": "Retrieves a list of all system and user-created labels for the specified gmail account.",
      "parameters": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "description": "Identifies the Gmail account (owner's email or 'me' for authenticated user) for which labels will be listed.",
            "title": "User Id",
            "default": "me",
            "examples": [
              "me",
              "user@example.com"
            ]
          }
        },
        "title": "ListLabelsRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_CREATE_COMMENT",
      "description": "Tool to create a comment on a file. use when you need to add a new comment to a specific file in google drive.",
      "parameters": {
        "type": "object",
        "properties": {
          "anchor": {
            "type": "string",
            "description": "A JSON string representing the region of the document to which the comment is anchored (e.g., {'type': 'line', 'line': 12}).",
            "title": "Anchor",
            "default": null,
            "nullable": true,
            "examples": [
              "{\"type\": \"line\", \"line\": 12}"
            ]
          },
          "content": {
            "type": "string",
            "description": "The plain text content of the comment.",
            "title": "Content",
            "examples": [
              "This is a great document!"
            ]
          },
          "file_id": {
            "type": "string",
            "description": "The ID of the file.",
            "title": "File Id",
            "examples": [
              "1a2b3c4d5e6f7g8h9i0j"
            ]
          },
          "quoted_file_content_mime_type": {
            "type": "string",
            "description": "The MIME type of the quoted content.",
            "title": "Quoted File Content Mime Type",
            "default": null,
            "nullable": true,
            "examples": [
              "text/plain"
            ]
          },
          "quoted_file_content_value": {
            "type": "string",
            "description": "The quoted content itself.",
            "title": "Quoted File Content Value",
            "default": null,
            "nullable": true,
            "examples": [
              "This is the text to quote."
            ]
          }
        },
        "required": [
          "file_id",
          "content"
        ],
        "title": "CreateCommentRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_CREATE_DRIVE",
      "description": "Tool to create a new shared drive. use when you need to programmatically create a new shared drive for collaboration or storage.",
      "parameters": {
        "type": "object",
        "properties": {
          "backgroundImageFile": {
            "type": "object",
            "description": "An image file and cropping parameters from which a background image for this shared drive is set. This is a write only field; it can only be set on drive.drives.update requests that don't set themeId. When specified, all fields of the backgroundImageFile must be set.",
            "title": "BackgroundImageFile",
            "default": null,
            "nullable": true,
            "properties": {
              "id": {
                "type": "string",
                "description": "The ID of an image file in Google Drive to use for the background.",
                "title": "Id"
              },
              "width": {
                "type": "number",
                "description": "The width of the cropped image in the range: 0.0 <= width <= 1.0.",
                "title": "Width",
                "minimum": 0,
                "maximum": 1
              },
              "xCoordinate": {
                "type": "number",
                "description": "The X coordinate of the cropped image in the range: 0.0 <= xCoordinate <= 1.0.",
                "title": "X Coordinate",
                "minimum": 0,
                "maximum": 1
              },
              "yCoordinate": {
                "type": "number",
                "description": "The Y coordinate of the cropped image in the range: 0.0 <= yCoordinate <= 1.0.",
                "title": "Y Coordinate",
                "minimum": 0,
                "maximum": 1
              }
            },
            "required": [
              "id",
              "width",
              "xCoordinate",
              "yCoordinate"
            ]
          },
          "colorRgb": {
            "type": "string",
            "description": "The color of this shared drive as an RGB hex string. It can only be set on a drive.drives.update request that does not set themeId.",
            "title": "Color Rgb",
            "default": null,
            "nullable": true,
            "examples": [
              "#FF0000"
            ]
          },
          "hidden": {
            "type": "boolean",
            "description": "Whether the shared drive is hidden from default view.",
            "title": "Hidden",
            "default": false,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of this shared drive.",
            "title": "Name",
            "examples": [
              "My New Shared Drive"
            ]
          },
          "requestId": {
            "type": "string",
            "description": "An ID, such as a random UUID, which uniquely identifies this user's request for idempotent creation of a shared drive. A repeated request by the same user and with the same request ID will avoid creating duplicates by attempting to create the same shared drive. If the shared drive already exists a 409 error will be returned.",
            "title": "Request Id",
            "examples": [
              "your-unique-request-id-123"
            ]
          },
          "themeId": {
            "type": "string",
            "description": "The ID of the theme from which the background image and color will be set. The set of possible driveThemes can be retrieved from a drive.about.get response. When not specified on a drive.drives.create request, a random theme is chosen from which the background image and color are set. This is a write-only field; it can only be set on requests that don't set colorRgb or backgroundImageFile.",
            "title": "Theme Id",
            "default": null,
            "nullable": true,
            "examples": [
              "default"
            ]
          }
        },
        "required": [
          "requestId",
          "name"
        ],
        "title": "CreateDriveRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_CREATE_FILE",
      "description": "Creates a new file or folder with metadata. use to create empty files or folders, or files with content by providing it in the request body (though this action primarily focuses on metadata creation).",
      "parameters": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "A short description of the file.",
            "title": "Description",
            "default": null,
            "nullable": true
          },
          "fields": {
            "type": "string",
            "description": "A comma-separated list of fields to include in the response.",
            "title": "Fields",
            "default": null,
            "nullable": true
          },
          "mimeType": {
            "type": "string",
            "description": "The MIME type of the file.",
            "title": "Mime Type",
            "default": null,
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "The name of the file.",
            "title": "Name",
            "default": null,
            "nullable": true
          },
          "parents": {
            "type": "array",
            "description": "The IDs of parent folders.",
            "title": "Parents",
            "default": null,
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "starred": {
            "type": "boolean",
            "description": "Whether the user has starred the file.",
            "title": "Starred",
            "default": null,
            "nullable": true
          }
        },
        "title": "CreateFileRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_CREATE_FOLDER",
      "description": "Creates a new folder in google drive, optionally within a parent folder specified by its id or name; if a parent name is provided but not found, the action will fail.",
      "parameters": {
        "type": "object",
        "properties": {
          "folder_name": {
            "type": "string",
            "description": "Name for the new folder.",
            "title": "Folder Name",
            "examples": [
              "Project Files",
              "Documents",
              "Reports"
            ]
          },
          "parent_id": {
            "type": "string",
            "description": "ID or name of the parent folder. If a name is provided, the action attempts to find it. If an ID is provided, it must be a valid Google Drive folder ID. If omitted, the folder is created in the Drive root.",
            "title": "Parent Id",
            "default": null,
            "nullable": true,
            "examples": [
              "0AGr3s6kL3rIuUk9PVA",
              "Existing Parent Folder Name",
              "1A2b3C4d5E6fG7h8I9j0KlMNOPqRstUVW"
            ]
          }
        },
        "required": [
          "folder_name"
        ],
        "title": "CreateFolderRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_CREATE_REPLY",
      "description": "Tool to create a reply to a comment in google drive. use when you need to respond to an existing comment on a file.",
      "parameters": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "description": "The action the reply performed to the parent comment. Valid values are: resolve, reopen.",
            "title": "Action",
            "default": null,
            "nullable": true,
            "examples": [
              "resolve"
            ]
          },
          "comment_id": {
            "type": "string",
            "description": "The ID of the comment.",
            "title": "Comment Id",
            "examples": [
              "0987654321zyxwutsrqponmlkjihgfedcba"
            ]
          },
          "content": {
            "type": "string",
            "description": "The plain text content of the reply. HTML content is not supported.",
            "title": "Content",
            "examples": [
              "Thanks for the feedback!"
            ]
          },
          "fields": {
            "type": "string",
            "description": "Selector specifying which fields to include in a partial response.",
            "title": "Fields",
            "default": null,
            "nullable": true,
            "examples": [
              "id,content"
            ]
          },
          "file_id": {
            "type": "string",
            "description": "The ID of the file.",
            "title": "File Id",
            "examples": [
              "1234567890abcdefghijklmnopqrstuvwxyz"
            ]
          }
        },
        "required": [
          "file_id",
          "comment_id",
          "content"
        ],
        "title": "CreateReplyRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_CREATE_SHORTCUT_TO_FILE",
      "description": "Tool to create a shortcut to a file or folder in google drive. use when you need to link to an existing drive item from another location without duplicating it.",
      "parameters": {
        "type": "object",
        "properties": {
          "ignoreDefaultVisibility": {
            "type": "boolean",
            "description": "Whether to ignore the domain's default visibility settings for the created file.",
            "title": "Ignore Default Visibility",
            "default": null,
            "nullable": true,
            "examples": [
              false
            ]
          },
          "includeLabels": {
            "type": "string",
            "description": "A comma-separated list of IDs of labels to include in the labelInfo part of the response.",
            "title": "Include Labels",
            "default": null,
            "nullable": true,
            "examples": [
              "labelId1,labelId2"
            ]
          },
          "includePermissionsForView": {
            "type": "string",
            "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
            "title": "Include Permissions For View",
            "default": null,
            "nullable": true,
            "examples": [
              "published"
            ]
          },
          "keepRevisionForever": {
            "type": "boolean",
            "description": "Whether to set the 'keepForever' field in the new head revision.",
            "title": "Keep Revision Forever",
            "default": null,
            "nullable": true,
            "examples": [
              false
            ]
          },
          "name": {
            "type": "string",
            "description": "The name of the shortcut.",
            "title": "Name",
            "examples": [
              "My Shortcut to Important Document"
            ]
          },
          "supportsAllDrives": {
            "type": "boolean",
            "description": "Whether the requesting application supports both My Drives and shared drives. Recommended to set to true if interacting with shared drives.",
            "title": "Supports All Drives",
            "default": null,
            "nullable": true,
            "examples": [
              true
            ]
          },
          "target_id": {
            "type": "string",
            "description": "The ID of the file or folder that this shortcut points to.",
            "title": "Target Id",
            "examples": [
              "1_DRbC10_AYSg3tNA2c2P9H2a26n9_2VA"
            ]
          },
          "target_mime_type": {
            "type": "string",
            "description": "The MIME type of the target file or folder. While optional, providing it can be helpful.",
            "title": "Target Mime Type",
            "default": null,
            "nullable": true,
            "examples": [
              "application/vnd.google-apps.document"
            ]
          }
        },
        "required": [
          "name",
          "target_id"
        ],
        "title": "CreateShortcutToFileRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_DELETE_COMMENT",
      "description": "Deletes a comment from a file. use when you need to remove a specific comment from a google drive file.",
      "parameters": {
        "type": "object",
        "properties": {
          "comment_id": {
            "type": "string",
            "description": "The ID of the comment.",
            "title": "Comment Id",
            "examples": [
              "1234567890"
            ]
          },
          "file_id": {
            "type": "string",
            "description": "The ID of the file.",
            "title": "File Id",
            "examples": [
              "1a2b3c4d5e6f7g8h9i0j"
            ]
          }
        },
        "required": [
          "file_id",
          "comment_id"
        ],
        "title": "DeleteCommentRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_DELETE_DRIVE",
      "description": "Tool to permanently delete a shared drive. use when you need to remove a shared drive and its contents (if specified).",
      "parameters": {
        "type": "object",
        "properties": {
          "allowItemDeletion": {
            "type": "boolean",
            "description": "Whether any items inside the shared drive should also be deleted. This option is only supported when `useDomainAdminAccess` is also set to `true`.",
            "title": "Allow Item Deletion",
            "default": null,
            "nullable": true,
            "examples": [
              true
            ]
          },
          "driveId": {
            "type": "string",
            "description": "The ID of the shared drive.",
            "title": "Drive Id",
            "examples": [
              "0AEMyflX29xHjUk9PVA"
            ]
          },
          "useDomainAdminAccess": {
            "type": "boolean",
            "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
            "title": "Use Domain Admin Access",
            "default": null,
            "nullable": true,
            "examples": [
              true
            ]
          }
        },
        "required": [
          "driveId"
        ],
        "title": "DeleteDriveRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_DELETE_PERMISSION",
      "description": "Deletes a permission from a file by permission id. use when you need to revoke access for a specific user or group from a file.",
      "parameters": {
        "type": "object",
        "properties": {
          "file_id": {
            "type": "string",
            "description": "The ID of the file or shared drive.",
            "title": "File Id",
            "examples": [
              "1a2b3c4d5e6f7g8h9i0j"
            ]
          },
          "permission_id": {
            "type": "string",
            "description": "The ID of the permission.",
            "title": "Permission Id",
            "examples": [
              "1234567890"
            ]
          },
          "supportsAllDrives": {
            "type": "boolean",
            "description": "Whether the requesting application supports both My Drives and shared drives.",
            "title": "Supports All Drives",
            "default": null,
            "nullable": true
          },
          "useDomainAdminAccess": {
            "type": "boolean",
            "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
            "title": "Use Domain Admin Access",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "file_id",
          "permission_id"
        ],
        "title": "DeletePermissionRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_DELETE_REPLY",
      "description": "Tool to delete a specific reply by reply id. use when you need to remove a reply from a comment on a file.",
      "parameters": {
        "type": "object",
        "properties": {
          "comment_id": {
            "type": "string",
            "description": "The ID of the comment.",
            "title": "Comment Id",
            "examples": [
              "AAAA_example_comment_id"
            ]
          },
          "file_id": {
            "type": "string",
            "description": "The ID of the file.",
            "title": "File Id",
            "examples": [
              "1ZdR3L3Kek7szY1j11SQZ9A_00up1j2xG"
            ]
          },
          "reply_id": {
            "type": "string",
            "description": "The ID of the reply.",
            "title": "Reply Id",
            "examples": [
              "AAAA_example_reply_id"
            ]
          }
        },
        "required": [
          "file_id",
          "comment_id",
          "reply_id"
        ],
        "title": "DeleteReplyRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_DOWNLOAD_FILE",
      "description": "Downloads a file from google drive by its id. for google workspace documents (docs, sheets, slides), optionally exports to a specified `mime type`. for other file types, downloads in their native format regardless of mime type.",
      "parameters": {
        "type": "object",
        "properties": {
          "file_id": {
            "type": "string",
            "description": "The unique identifier of the file to be downloaded from Google Drive. This ID can typically be found in the file's URL in Google Drive or obtained from API calls that list files.",
            "title": "File Id",
            "examples": [
              "1aBcDeFgHiJkLmNoPqRsTuVwXyZ0123456789"
            ]
          },
          "mime_type": {
            "type": "string",
            "description": "Target MIME type for exporting Google Workspace documents (e.g., Google Doc, Sheet, Slide). This parameter is automatically ignored for non-Google Workspace files, which are downloaded in their native format. Only specify this when you want to export a Google Workspace document to a different format (e.g., export Google Doc to PDF).",
            "title": "MimeType",
            "default": null,
            "nullable": true,
            "enum": [
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
              "application/vnd.oasis.opendocument.text",
              "application/rtf",
              "application/pdf",
              "text/plain",
              "application/zip",
              "application/epub+zip",
              "text/markdown",
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet",
              "application/x-vnd.oasis.opendocument.spreadsheet",
              "text/csv",
              "text/tab-separated-values",
              "application/vnd.openxmlformats-officedocument.presentationml.presentation",
              "application/vnd.oasis.opendocument.presentation",
              "image/jpeg",
              "image/png",
              "image/svg+xml",
              "application/vnd.google-apps.script+json",
              "application/vnd.google-apps.vid"
            ],
            "examples": [
              "application/pdf",
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
              "text/csv"
            ]
          }
        },
        "required": [
          "file_id"
        ],
        "title": "DownloadFileRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_EMPTY_TRASH",
      "description": "Tool to permanently delete all of the user's trashed files. use when you want to empty the trash in google drive.",
      "parameters": {
        "type": "object",
        "properties": {
          "driveId": {
            "type": "string",
            "description": "If set, empties the trash of the provided shared drive. This parameter is ignored if the item is not in a shared drive.",
            "title": "Drive Id",
            "default": null,
            "nullable": true,
            "examples": [
              "0ABmN4q4aF7dPUk9PVA"
            ]
          },
          "enforceSingleParent": {
            "type": "boolean",
            "description": "Deprecated: If an item is not in a shared drive and its last parent is deleted but the item itself is not, the item will be placed under its owner's root. This parameter is ignored if the item is not in a shared drive.",
            "title": "Enforce Single Parent",
            "default": null,
            "nullable": true
          }
        },
        "title": "EmptyTrashRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_FILES_MODIFY_LABELS",
      "description": "Modifies the set of labels applied to a file. returns a list of the labels that were added or modified. use when you need to programmatically change labels on a google drive file, such as adding, updating, or removing them.",
      "parameters": {
        "type": "object",
        "properties": {
          "file_id": {
            "type": "string",
            "description": "The ID of the file.",
            "title": "File Id"
          },
          "kind": {
            "type": "string",
            "description": "This is always drive#modifyLabelsRequest.",
            "title": "Kind",
            "default": "drive#modifyLabelsRequest",
            "nullable": true
          },
          "label_modifications": {
            "type": "array",
            "description": "The list of modifications to apply to the labels on the file.",
            "title": "Label Modifications",
            "items": {
              "type": "object",
              "title": "LabelModification",
              "properties": {
                "field_modifications": {
                  "description": "The list of modifications to this label's fields.",
                  "anyOf": [
                    {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "title": "FieldModification",
                        "properties": {
                          "field_id": {
                            "type": "string",
                            "description": "The ID of the field to be modified.",
                            "title": "Field Id"
                          },
                          "kind": {
                            "description": "This is always drive#labelFieldModification.",
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "title": "Kind",
                            "default": "drive#labelFieldModification"
                          },
                          "set_date_values": {
                            "description": "Replaces the value of a `date` field with these new values. The string must be in the RFC 3339 full-date format: YYYY-MM-DD.",
                            "anyOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "title": "Set Date Values",
                            "default": null,
                            "examples": [
                              "2023-10-26"
                            ]
                          },
                          "set_integer_values": {
                            "description": "Replaces the value of an `integer` field with these new values.",
                            "anyOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "title": "Set Integer Values",
                            "default": null
                          },
                          "set_selection_values": {
                            "description": "Replaces a `selection` field with these new values.",
                            "anyOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "title": "Set Selection Values",
                            "default": null
                          },
                          "set_text_values": {
                            "description": "Sets the value of a `text` field.",
                            "anyOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "title": "Set Text Values",
                            "default": null
                          },
                          "set_user_values": {
                            "description": "Replaces a `user` field with these new values. The values must be valid email addresses.",
                            "anyOf": [
                              {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "title": "Set User Values",
                            "default": null
                          },
                          "unset_values": {
                            "description": "Unsets the values for this field.",
                            "anyOf": [
                              {
                                "type": "boolean"
                              },
                              {
                                "type": "null"
                              }
                            ],
                            "title": "Unset Values",
                            "default": null
                          }
                        },
                        "required": [
                          "field_id"
                        ]
                      }
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Field Modifications",
                  "default": null
                },
                "kind": {
                  "description": "This is always drive#labelModification.",
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Kind",
                  "default": "drive#labelModification"
                },
                "label_id": {
                  "type": "string",
                  "description": "The ID of the label to modify.",
                  "title": "Label Id"
                },
                "remove_label": {
                  "description": "If true, the label will be removed from the file.",
                  "anyOf": [
                    {
                      "type": "boolean"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Remove Label",
                  "default": null
                }
              },
              "required": [
                "label_id"
              ]
            }
          }
        },
        "required": [
          "file_id",
          "label_modifications"
        ],
        "title": "FilesModifyLabelsRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_GENERATE_IDS",
      "description": "Generates a set of file ids which can be provided in create or copy requests. use when you need to pre-allocate ids for new files or copies.",
      "parameters": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of IDs to return. Value must be between 1 and 1000, inclusive.",
            "title": "Count",
            "default": null,
            "nullable": true,
            "minimum": 1,
            "maximum": 1000,
            "examples": [
              10
            ]
          },
          "space": {
            "type": "string",
            "description": "The space in which the IDs can be used. Supported values are 'drive' and 'appDataFolder'.",
            "title": "Space",
            "default": null,
            "nullable": true,
            "examples": [
              "drive"
            ]
          },
          "type": {
            "type": "string",
            "description": "The type of items for which the IDs can be used. For example, 'files' or 'shortcuts'.",
            "title": "Type",
            "default": null,
            "nullable": true,
            "examples": [
              "files"
            ]
          }
        },
        "title": "GenerateIdsRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_GET_ABOUT",
      "description": "Tool to retrieve information about the user, the user's drive, and system capabilities. use when you need to check storage quotas, user details, or supported import/export formats.",
      "parameters": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "string",
            "description": "A comma-separated list of fields to include in the response. Use `*` to include all fields.",
            "title": "Fields",
            "default": "*",
            "examples": [
              "*",
              "user,storageQuota"
            ]
          }
        },
        "title": "GetAboutRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_GET_CHANGES_START_PAGE_TOKEN",
      "description": "Tool to get the starting pagetoken for listing future changes in google drive. use this when you need to track changes to files and folders.",
      "parameters": {
        "type": "object",
        "properties": {
          "driveId": {
            "type": "string",
            "description": "The ID of the shared drive for which the starting pageToken for listing future changes from that shared drive will be returned.",
            "title": "Drive Id",
            "default": null,
            "nullable": true,
            "examples": [
              "0AB_CD1234EFG5HIJ6KLM7N8PQRST9UVWX"
            ]
          },
          "supportsAllDrives": {
            "type": "boolean",
            "description": "Whether the requesting application supports both My Drives and shared drives. Defaults to false.",
            "title": "Supports All Drives",
            "default": false,
            "nullable": true,
            "examples": [
              true
            ]
          },
          "supportsTeamDrives": {
            "type": "boolean",
            "description": "Deprecated: Use supportsAllDrives instead.",
            "title": "Supports Team Drives",
            "default": null,
            "nullable": true,
            "examples": [
              true
            ]
          },
          "teamDriveId": {
            "type": "string",
            "description": "Deprecated: Use driveId instead.",
            "title": "Team Drive Id",
            "default": null,
            "nullable": true,
            "examples": [
              "0AB_CD1234EFG5HIJ6KLM7N8PQRST9UVWX"
            ]
          }
        },
        "title": "GetChangesStartPageTokenRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_GET_COMMENT",
      "description": "Tool to get a comment by id. use when you need to retrieve a specific comment from a google drive file and have both the file id and comment id.",
      "parameters": {
        "type": "object",
        "properties": {
          "commentId": {
            "type": "string",
            "description": "The ID of the comment.",
            "title": "Comment Id",
            "examples": [
              "11a22b33c44d55e66f77g88h99i00j"
            ]
          },
          "fileId": {
            "type": "string",
            "description": "The ID of the file.",
            "title": "File Id",
            "examples": [
              "1a2b3c4d5e6f7g8h9i0j"
            ]
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "Whether to return deleted comments. Deleted comments will not include their original content.",
            "title": "Include Deleted",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "fileId",
          "commentId"
        ],
        "title": "GetCommentRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_GET_DRIVE",
      "description": "Tool to get a shared drive by id. use when you need to retrieve information about a specific shared drive.",
      "parameters": {
        "type": "object",
        "properties": {
          "drive_id": {
            "type": "string",
            "description": "The ID of the shared drive.",
            "title": "Drive Id",
            "examples": [
              "0ABCA123456789"
            ]
          },
          "use_domain_admin_access": {
            "type": "boolean",
            "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if they are an administrator of the domain to which the shared drive belongs.",
            "title": "Use Domain Admin Access",
            "default": null,
            "nullable": true,
            "examples": [
              true
            ]
          }
        },
        "required": [
          "drive_id"
        ],
        "title": "GetDriveRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_GET_FILE_METADATA",
      "description": "Tool to get a file's metadata by id. use when you need to retrieve the metadata for a specific file in google drive.",
      "parameters": {
        "type": "object",
        "properties": {
          "acknowledgeAbuse": {
            "type": "boolean",
            "description": "Whether the user is acknowledging the risk of downloading known malware or other abusive files. This is only applicable when the alt parameter is set to media and the user is the owner of the file or an organizer of the shared drive in which the file resides.",
            "title": "Acknowledge Abuse",
            "default": null,
            "nullable": true
          },
          "fileId": {
            "type": "string",
            "description": "The ID of the file.",
            "title": "File Id",
            "examples": [
              "1a2b3c4d5e6f7g8h9i0j"
            ]
          },
          "includeLabels": {
            "type": "string",
            "description": "A comma-separated list of IDs of labels to include in the labelInfo part of the response.",
            "title": "Include Labels",
            "default": null,
            "nullable": true
          },
          "includePermissionsForView": {
            "type": "string",
            "description": "Specifies which additional view's permissions to include in the response. Only 'published' is supported.",
            "title": "Include Permissions For View",
            "default": null,
            "nullable": true
          },
          "supportsAllDrives": {
            "type": "boolean",
            "description": "Whether the requesting application supports both My Drives and shared drives. This parameter will default to false.",
            "title": "Supports All Drives",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "fileId"
        ],
        "title": "GetFileMetadataRequest"
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "GOOGLEDRIVE_GET_PERMISSION",
      "description": "Gets a permission by id. use this tool to retrieve a specific permission for a file or shared drive.",
      "parameters": {
        "type": "object",
        "properties": {
          "file_id": {
            "type": "string",
            "description": "The ID of the file.",
            "title": "File Id",
            "examples": [
              "1a2b3c4d5e6f7g8h9i0j"
            ]
          },
          "permission_id": {
            "type": "string",
            "description": "The ID of the permission.",
            "title": "Permission Id",
            "examples": [
              "1234567890"
            ]
          },
          "supports_all_drives": {
            "type": "boolean",
            "description": "Whether the requesting application supports both My Drives and shared drives.",
            "title": "Supports All Drives",
            "default": null,
            "nullable": true
          },
          "use_domain_admin_access": {
            "type": "boolean",
            "description": "Issue the request as a domain administrator; if set to true, then the requester will be granted access if the file ID parameter refers to a shared drive and the requester is an administrator of the domain to which the shared drive belongs.",
            "title": "Use Domain Admin Access",
            "default": null,
            "nullable": true
          }
        },
        "required": [
          "file_id",
          "permission_id"
        ],
        "title": "GetPermissionRequest"
      }
    }
  }
]